package com.skrrrrr.harudam.auth;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.skrrrrr.harudam.auth.dto.TokenDto;
import com.skrrrrr.harudam.verification.VerificationService;

import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/api/auth") // 이 컨트롤러의 모든 api는 /api/auth로 시작
@RequiredArgsConstructor
@CrossOrigin(origins = "http://localhost:5173") // vue 서버의 주소 허용
public class AuthController {
	
	private final AuthService authService;
	private final VerificationService verificationService;
	
	@PostMapping("/oauth/kakao/callback")
	public ResponseEntity<TokenDto> kakaoCallback(@RequestBody KakaoCallbackRequest req) {
	    if (req == null || req.code == null || req.code.isBlank() || req.redirectUri == null || req.redirectUri.isBlank()) {
	        return ResponseEntity.badRequest().build();
	    }
	    TokenDto token = authService.loginWithKakaoCode(req.code, req.redirectUri);
	    return ResponseEntity.ok(token);
	}

	public static class KakaoCallbackRequest {
	    public String code;
	    public String redirectUri;
	    public String state;
	}
	
	@PostMapping("/send-verification-code")
	public ResponseEntity<?> sendVerificationCode(
			@RequestParam Long childId,
			@RequestParam String phone) {
		verificationService.sendCode(childId, phone);
		return ResponseEntity.ok().body("인증번호를 전송했습니다.");
	}
	
	@PostMapping("/verify-code")
	public ResponseEntity<?> verifyCode(
			@RequestParam String phone,
			@RequestParam String code) {
		boolean success = verificationService.verifyCode(phone, code);
		if (success) {
			return ResponseEntity.ok().body("인증 성공");
		} else {
			return ResponseEntity.badRequest().body("인증 실패");
		}
	}

}